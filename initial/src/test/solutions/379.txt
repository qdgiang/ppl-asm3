Program([ClassDecl(Id(Parent),[AttributeDecl(Instance,ConstDecl(Id(a),IntType,None)),AttributeDecl(Static,VarDecl(Id($b),IntType,BinaryOp(+,IntLit(1),IntLit(6)))),AttributeDecl(Static,VarDecl(Id($c),IntType,IntLit(2))),MethodDecl(Id(getRandom),Instance,[],Block([Call(Id(RandomClass),Id(print),[])])),MethodDecl(Id(getDoubleA),Instance,[],Block([Call(Id(RandomClass),Id(print),[BinaryOp(*,Id(a),Id(a))])])),MethodDecl(Id(getBplusCplusD),Instance,[param(Id(D),IntType)],Block([AssignStmt(Id(D),IntLit(5)),Return(BinaryOp(+,BinaryOp(+,FieldAccess(Self(),Id(b)),FieldAccess(Self(),Id(c))),Id(D)))])),MethodDecl(Id(Constructor),Instance,[],Block([AssignStmt(FieldAccess(Self(),Id(a)),IntLit(5))]))]),ClassDecl(Id(Child),Id(Parent),[AttributeDecl(Instance,ConstDecl(Id(child),StringType,None)),MethodDecl(Id($testStatic),Static,[param(Id(str),StringType)],Block([AssignStmt(Id(str),StringLit(Hello)),Call(Id(RandomClass),Id(print),[Id(str)])])),AttributeDecl(Instance,ConstDecl(Id(My1stCons),IntType,BinaryOp(+,IntLit(1),IntLit(5)))),AttributeDecl(Instance,ConstDecl(Id(My2ndCons),IntType,IntLit(2))),AttributeDecl(Static,VarDecl(Id($x),IntType,IntLit(0))),AttributeDecl(Static,VarDecl(Id($y),IntType,IntLit(0))),MethodDecl(Id(Constructor),Instance,[],Block([AssignStmt(FieldAccess(Self(),Id(child)),StringLit(Child class))])),MethodDecl(Id(printChild),Instance,[],Block([For(Id(i),IntLit(1),IntLit(100),IntLit(1),Block([Call(Id(Out),Id(print),[FieldAccess(Self(),Id(child))])])])]))])])